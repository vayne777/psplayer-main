/*
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.hilariousstartups.javaskills.psplayer.swagger_codegen.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Продукт в корзине покупателя.
 */
@Schema(description = "Продукт в корзине покупателя.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-08-29T20:10:20.018547+03:00[Europe/Moscow]")
public class ProductInBasket {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("productName")
  private String productName = null;

  @SerializedName("priсe")
  private Double prie = null;

  @SerializedName("productCount")
  private Integer productCount = null;

  public ProductInBasket id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Id продукта
   * @return id
  **/
  @Schema(description = "Id продукта")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public ProductInBasket productName(String productName) {
    this.productName = productName;
    return this;
  }

   /**
   * Название продукта
   * @return productName
  **/
  @Schema(description = "Название продукта")
  public String getProductName() {
    return productName;
  }

  public void setProductName(String productName) {
    this.productName = productName;
  }

  public ProductInBasket prie(Double prie) {
    this.prie = prie;
    return this;
  }

   /**
   * Цена по которой покупатель приобретает товар (фиксируется на момент взятия товара с полки)
   * @return prie
  **/
  @Schema(description = "Цена по которой покупатель приобретает товар (фиксируется на момент взятия товара с полки)")
  public Double getPrie() {
    return prie;
  }

  public void setPrie(Double prie) {
    this.prie = prie;
  }

  public ProductInBasket productCount(Integer productCount) {
    this.productCount = productCount;
    return this;
  }

   /**
   * Количество покупаемого товара
   * @return productCount
  **/
  @Schema(description = "Количество покупаемого товара")
  public Integer getProductCount() {
    return productCount;
  }

  public void setProductCount(Integer productCount) {
    this.productCount = productCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductInBasket productInBasket = (ProductInBasket) o;
    return Objects.equals(this.id, productInBasket.id) &&
        Objects.equals(this.productName, productInBasket.productName) &&
        Objects.equals(this.prie, productInBasket.prie) &&
        Objects.equals(this.productCount, productInBasket.productCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, productName, prie, productCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductInBasket {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    productName: ").append(toIndentedString(productName)).append("\n");
    sb.append("    prie: ").append(toIndentedString(prie)).append("\n");
    sb.append("    productCount: ").append(toIndentedString(productCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
