/*
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.hilariousstartups.javaskills.psplayer.swagger_codegen.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Продуктовая полка. На полке может находиться товар только одного вида, либо она может быть пустой. Полка может хранить определенное максимальное количество товаров. Также полки разнятся по заметности для покупателя (от 1 - самая незаметная, до 5 - максимально на виду
 */
@Schema(description = "Продуктовая полка. На полке может находиться товар только одного вида, либо она может быть пустой. Полка может хранить определенное максимальное количество товаров. Также полки разнятся по заметности для покупателя (от 1 - самая незаметная, до 5 - максимально на виду")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-08-29T20:10:20.018547+03:00[Europe/Moscow]")
public class RackCell {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("visibility")
  private Integer visibility = null;

  @SerializedName("capacity")
  private Integer capacity = null;

  @SerializedName("productId")
  private Integer productId = null;

  @SerializedName("productName")
  private String productName = null;

  @SerializedName("productQuantity")
  private Integer productQuantity = null;

  public RackCell id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Id полки
   * @return id
  **/
  @Schema(description = "Id полки")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public RackCell visibility(Integer visibility) {
    this.visibility = visibility;
    return this;
  }

   /**
   * Заметность полки для покупателя (1 - самая незаметная, 5 - самая заметная)
   * @return visibility
  **/
  @Schema(description = "Заметность полки для покупателя (1 - самая незаметная, 5 - самая заметная)")
  public Integer getVisibility() {
    return visibility;
  }

  public void setVisibility(Integer visibility) {
    this.visibility = visibility;
  }

  public RackCell capacity(Integer capacity) {
    this.capacity = capacity;
    return this;
  }

   /**
   * Максимальное количество товара на полке
   * @return capacity
  **/
  @Schema(description = "Максимальное количество товара на полке")
  public Integer getCapacity() {
    return capacity;
  }

  public void setCapacity(Integer capacity) {
    this.capacity = capacity;
  }

  public RackCell productId(Integer productId) {
    this.productId = productId;
    return this;
  }

   /**
   * Id продукта, стоящего на полке (если полка пустая, то не заполняется)
   * @return productId
  **/
  @Schema(description = "Id продукта, стоящего на полке (если полка пустая, то не заполняется)")
  public Integer getProductId() {
    return productId;
  }

  public void setProductId(Integer productId) {
    this.productId = productId;
  }

  public RackCell productName(String productName) {
    this.productName = productName;
    return this;
  }

   /**
   * Название продукта, стоящего на полке (если полка пустая, то не заполняется)
   * @return productName
  **/
  @Schema(description = "Название продукта, стоящего на полке (если полка пустая, то не заполняется)")
  public String getProductName() {
    return productName;
  }

  public void setProductName(String productName) {
    this.productName = productName;
  }

  public RackCell productQuantity(Integer productQuantity) {
    this.productQuantity = productQuantity;
    return this;
  }

   /**
   * Количество продукта, стоящего на полке
   * @return productQuantity
  **/
  @Schema(description = "Количество продукта, стоящего на полке")
  public Integer getProductQuantity() {
    return productQuantity;
  }

  public void setProductQuantity(Integer productQuantity) {
    this.productQuantity = productQuantity;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RackCell rackCell = (RackCell) o;
    return Objects.equals(this.id, rackCell.id) &&
        Objects.equals(this.visibility, rackCell.visibility) &&
        Objects.equals(this.capacity, rackCell.capacity) &&
        Objects.equals(this.productId, rackCell.productId) &&
        Objects.equals(this.productName, rackCell.productName) &&
        Objects.equals(this.productQuantity, rackCell.productQuantity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, visibility, capacity, productId, productName, productQuantity);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RackCell {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("    capacity: ").append(toIndentedString(capacity)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    productName: ").append(toIndentedString(productName)).append("\n");
    sb.append("    productQuantity: ").append(toIndentedString(productQuantity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
